version: "3"

networks:
  mediator-network:


volumes:
  agency-wallet:
  mediator-controller-data:

    # x-env: &defaults
    #   MEDIATOR_CONTROLLER_PORT: ${MEDIATOR_CONTROLLER_PORT:-3010}

services:
  caddy:
    image: caddy
    hostname: caddy
    networks:
      - mediator-network
    ports:
      # Uncomment to access caddy outside of containers
      - 8080:2015
    #   - 2019:2019
    volumes:
      - ./caddy/Caddyfile:/etc/caddy/Caddyfile
    healthcheck:
      # Port 2019 is an internal Caddy admin port.
      test: nc -zv localhost:2019 || exit -1
      interval: 3s
      timeout: 3s
      retries: 5

  # ngrok:
  #   image: ngrok/ngrok
  #   # restart: unless-stopped
  #   hostname: ngrok
  #   depends_on:
  #     - caddy
  #   networks:
  #     - mediator-network
  #   environment:
  #     - NGROK_AUTHTOKEN=${NGROK_AUTHTOKEN}
  #   command: http caddy:2015 --log stdout
  #   # ports: # Uncomment to access ngrok outside of containers
  #   #   - 4040:4040 # admin port
  #   healthcheck:
  #     test: /bin/bash -c "</dev/tcp/ngrok/4040"
  #     interval: 3s
  #     timeout: 3s
  #     retries: 5

  # mediator-controller:
  #   image: node:fermium
  #   # restart: unless-stopped
  #   environment:
  #     - PORT=${MEDIATOR_CONTROLLER_PORT:-3010}
  #     - CONTROLLER_ADMIN_API_KEY=${MEDIATOR_CONTROLLER_ADMIN_API_KEY}
  #     - MEDIATOR_ADMIN_URL=${MEDIATOR_AGENT_ADMIN_URL-http://mediator:3002}
  #     - MEDIATOR_ADMIN_API_KEY=${MEDIATOR_AGENT_ADMIN_API_KEY}
  #     - MEDIATOR_ALIAS=${MEDIATOR_ALIAS}
  #     - LOG_LEVEL=${LOG_LEVEL}
  #   volumes:
  #     - ./acapy/controller:/usr/src/controller
  #     - mediator-controller-data:/usr/src/controller/node_modules
  #   # ports: # Uncomment to access controller outside of containers
  #   #   - ${MEDIATOR_CONTROLLER_PORT:-3010}:${MEDIATOR_CONTROLLER_PORT:-3010}
  #   networks:
  #     - mediator-network
  #   working_dir: /usr/src/controller
  #   entrypoint: /bin/bash
  #   command: ["-c", "npm install; npm run dev"]
  #   healthcheck:
  #     test: /bin/bash -c "</dev/tcp/mediator-controller/3010"
  #     interval: 5s
  #     timeout: 5s
  #     retries: 5

  mediator:
    build:
      context: .
      dockerfile: deployment/docker/Dockerfile
    depends_on:
      # mediator-controller:
      #   condition: service_healthy
      - db
      # ngrok:
      #   condition: service_healthy
    restart: unless-stopped
    environment:
      - ENV=${ENV:-local}
      - POSTGRESQL_HOST=${POSTGRESQL_HOST:-db}
      - POSTGRESQL_PORT=${POSTGRESQL_PORT:-5435}
      - ACAPY_WALLET_STORAGE_CONFIG={"url":"${POSTGRESQL_HOST:-db}:${POSTGRESQL_PORT:-5432}","wallet_scheme":"DatabasePerWallet"}
      - ACAPY_WALLET_STORAGE_CREDS={"account":"${POSTGRESQL_USER:-postgres}","password":"${POSTGRESQL_PASSWORD:-development}","admin_account":"${POSTGRESQL_ADMIN_USER:-postgres}","admin_password":"${POSTGRESQL_ADMIN_PASSWORD:-development}"}
      - ACAPY_WALLET_NAME=${MEDIATOR_WALLET_NAME:-mediator}
      - ACAPY_WALLET_KEY=${MEDIATOR_WALLET_KEY:-testing}
      - MEDIATOR_AGENT_HTTP_IN_PORT=${MEDIATOR_AGENT_HTTP_IN_PORT:-3000}
      - MEDIATOR_AGENT_WS_IN_PORT=${MEDIATOR_AGENT_WS_IN_PORT:-3001}
      - MEDIATOR_AGENT_HTTP_ADMIN_PORT=${MEDIATOR_AGENT_HTTP_ADMIN_PORT:-3002}
      - MEDIATOR_AGENT_ADMIN_MODE=${MEDIATOR_AGENT_ADMIN_MODE:-admin-api-key 7gdmVBiJalMj52Oum50yD8neu/nxmv3/DTWcZPyKZ4K2UdNNwSPKgg==}
      - MEDIATOR_AGENT_LABEL=${MEDIATOR_AGENT_LABEL:-Mediator}
      - MEDIATOR_ENDPOINT_URL=${MEDIATOR_ENDPOINT_URL:-localhost}
      - MEDIATOR_ARG_FILE=${MEDIATOR_ARG_FILE:-./configs/mediator-auto-accept.yml}
      - MEDIATOR_CONTROLLER_WEBHOOK=${MEDIATOR_CONTROLLER_WEBHOOK:-http://mediator-controller:3010/webhooks}
      - MEDIATOR_AGENT_ADMIN_API_KEY=${MEDIATOR_AGENT_ADMIN_API_KEY}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    # ports: # Uncomment to access mediator outside of containers
    #   - ${MEDIATOR_AGENT_HTTP_ADMIN_PORT:-3002}:${MEDIATOR_AGENT_HTTP_ADMIN_PORT:-3002}
    #   - ${MEDIATOR_AGENT_HTTP_IN_PORT:-3000}:${MEDIATOR_AGENT_HTTP_IN_PORT:-3000}
    #   - ${MEDIATOR_AGENT_WS_IN_PORT:-3001}:${MEDIATOR_AGENT_WS_IN_PORT:-3001}
    networks:
      - mediator-network
    healthcheck:
      test: /bin/bash -c "</dev/tcp/mediator/3000"
      interval: 5s
      timeout: 5s
      retries: 5

  db:
    image: postgres:14.1-alpine
    # restart: always
    environment:
      POSTGRES_PASSWORD: ${POSTGRESQL_ADMIN_PASSWORD:-development}
    ports:
      # Uncomment to access postgres outside of containers
      - "5435:5432"
    networks:
      - mediator-network
    volumes:
      - agency-wallet:/var/lib/pgsql/data
    healthcheck:
      test: pg_isready -U postgres
      interval: 3s
      timeout: 3s
      retries: 5
